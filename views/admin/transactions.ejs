<!-- views/admin/transactions.ejs -->
<%- contentFor('body') %>
<div class="container mx-auto px-4 py-8">
    <div class="bg-white rounded-lg shadow-lg p-6">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold text-gray-900">Transaction History</h1>
            <div class="flex space-x-4">
                <select id="statusFilter" class="rounded-lg border-gray-300">
                    <option value="">All Status</option>
                    <option value="PENDING">Pending</option>
                    <option value="SUCCESS">Success</option>
                    <option value="FAILED">Failed</option>
                </select>
                <input type="text" 
                       id="searchInput" 
                       placeholder="Search by Order ID or User" 
                       class="rounded-lg border-gray-300">
            </div>
        </div>

        <!-- Transactions Table -->
        <div class="overflow-x-auto">
            <table class="min-w-full">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Order ID
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            User
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Plan
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Amount
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Method
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Status
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Date
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="transactionsBody">
                    <% transactions.forEach(transaction => { %>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                <%= transaction.merchant_order_id %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <div><%= transaction.username %></div>
                                <div class="text-xs text-gray-400"><%= transaction.email %></div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= transaction.plan_name %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                Rp <%= transaction.amount.toLocaleString('id-ID') %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= transaction.payment_method %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                                    <%= transaction.status === 'SUCCESS' ? 'bg-green-100 text-green-800' :
                                        transaction.status === 'FAILED' ? 'bg-red-100 text-red-800' :
                                        'bg-yellow-100 text-yellow-800' %>">
                                    <%= transaction.status %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <%= new Date(transaction.created_at).toLocaleString('id-ID') %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <button onclick="checkStatus('<%= transaction.merchant_order_id %>')"
                                        class="text-blue-600 hover:text-blue-900">
                                    Check Status
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

<!-- Status Check Modal -->
<div id="statusModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded-lg p-6 max-w-lg w-full mx-4">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Transaction Status</h3>
        <div id="statusDetails" class="space-y-4 mb-6">
            <!-- Status details will be inserted here -->
        </div>
        <div class="flex justify-end">
            <button onclick="closeStatusModal()" 
                    class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300">
                Close
            </button>
        </div>
    </div>
</div>

<%- contentFor('script') %>
<script>
let allTransactions = <%- JSON.stringify(transactions) %>;
const statusFilter = document.getElementById('statusFilter');
const searchInput = document.getElementById('searchInput');

function filterTransactions() {
    const statusValue = statusFilter.value;
    const searchValue = searchInput.value.toLowerCase();

    const filtered = allTransactions.filter(transaction => {
        const matchesStatus = !statusValue || transaction.status === statusValue;
        const matchesSearch = !searchValue || 
            transaction.merchant_order_id.toLowerCase().includes(searchValue) ||
            transaction.username.toLowerCase().includes(searchValue) ||
            transaction.email.toLowerCase().includes(searchValue);
        
        return matchesStatus && matchesSearch;
    });

    renderTransactions(filtered);
}

function renderTransactions(transactions) {
    const tbody = document.getElementById('transactionsBody');
    tbody.innerHTML = transactions.map(transaction => `
        <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                ${transaction.merchant_order_id}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <div>${transaction.username}</div>
                <div class="text-xs text-gray-400">${transaction.email}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                ${transaction.plan_name}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                Rp ${transaction.amount.toLocaleString('id-ID')}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                ${transaction.payment_method}
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                    ${transaction.status === 'SUCCESS' ? 'bg-green-100 text-green-800' :
                    transaction.status === 'FAILED' ? 'bg-red-100 text-red-800' :
                    'bg-yellow-100 text-yellow-800'}">
                    ${transaction.status}
                </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                ${new Date(transaction.created_at).toLocaleString('id-ID')}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <button onclick="checkStatus('${transaction.merchant_order_id}')"
                        class="text-blue-600 hover:text-blue-900">
                    Check Status
                </button>
            </td>
        </tr>
    `).join('');
}

async function checkStatus(merchantOrderId) {
    try {
        const response = await fetch('/payment/check-status', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ merchantOrderId })
        });

        const data = await response.json();
        
        // Format and display status details
        const statusDetails = document.getElementById('statusDetails');
        statusDetails.innerHTML = `
            <div class="bg-gray-50 p-4 rounded-lg">
                <div class="grid grid-cols-2 gap-4">
                    <div class="text-sm text-gray-500">Reference</div>
                    <div class="text-sm font-medium">${data.reference || '-'}</div>
                    
                    <div class="text-sm text-gray-500">Amount</div>
                    <div class="text-sm font-medium">Rp ${Number(data.amount).toLocaleString('id-ID')}</div>
                    
                    <div class="text-sm text-gray-500">Status</div>
                    <div class="text-sm font-medium">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full
                            ${data.statusCode === '00' ? 'bg-green-100 text-green-800' : 
                            'bg-red-100 text-red-800'}">
                            ${data.statusCode === '00' ? 'SUCCESS' : 'FAILED'}
                        </span>
                    </div>
                    
                    ${data.statusMessage ? `
                        <div class="text-sm text-gray-500">Message</div>
                        <div class="text-sm font-medium">${data.statusMessage}</div>
                    ` : ''}
                </div>
            </div>
        `;

        openStatusModal();
    } catch (error) {
        console.error('Status check error:', error);
        showNotification('Failed to check transaction status', 'error');
    }
}

function showNotification(message, type = 'error') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg ${
        type === 'error' ? 'bg-red-500' : 'bg-green-500'
    } text-white`;
    notification.textContent = message;
    document.body.appendChild(notification);
    setTimeout(() => notification.remove(), 5000);
}

function openStatusModal() {
    document.getElementById('statusModal').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closeStatusModal() {
    document.getElementById('statusModal').classList.add('hidden');
    document.body.style.overflow = '';
}

// Event listeners
statusFilter.addEventListener('change', filterTransactions);
searchInput.addEventListener('input', filterTransactions);

// Close modal on outside click
document.getElementById('statusModal').addEventListener('click', (e) => {
    if (e.target === e.currentTarget) {
        closeStatusModal();
    }
});

// Refresh data periodically (every 30 seconds)
setInterval(async () => {
    try {
        const response = await fetch('/admin/transactions', {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        });
        const data = await response.json();
        allTransactions = data;
        filterTransactions();
    } catch (error) {
        console.error('Error refreshing transactions:', error);
    }
}, 30000);
</script>