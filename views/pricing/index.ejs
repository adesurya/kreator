<!-- views/pricing/index.ejs -->
<%- contentFor('body') %>
<div class="min-h-screen bg-gray-100 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="text-center mb-12">
            <h1 class="text-3xl font-bold text-gray-900">Choose Your Plan</h1>
            <p class="mt-4 text-lg text-gray-600">Get access to all our features with a subscription plan</p>
        </div>

        <!-- Plans Grid -->
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
            <% if (plans && plans.length > 0) { %>
                <% plans.forEach(plan => { %>
                    <div class="bg-white rounded-lg shadow-lg overflow-hidden transform transition-all hover:scale-105">
                        <div class="p-6">
                            <h2 class="text-2xl font-bold text-gray-900 mb-4"><%= plan.name %></h2>
                            <p class="text-4xl font-bold text-blue-600 mb-6">
                                Rp <%= plan.price.toLocaleString('id-ID') %>
                            </p>
                            <p class="text-gray-600 mb-6">Duration: <%= plan.duration %> days</p>
                            
                            <button onclick="selectPlan(<%= JSON.stringify(plan) %>)" 
                                    class="w-full bg-blue-600 text-white rounded-md py-3 hover:bg-blue-700 transition-colors">
                                Select Plan
                            </button>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="col-span-full text-center text-gray-500">
                    No plans available at the moment.
                </div>
            <% } %>
        </div>

        <!-- Payment Modal -->
        <div id="paymentModal" class="hidden fixed inset-0 z-50">
            <!-- Backdrop -->
            <div class="absolute inset-0 bg-black bg-opacity-50 transition-opacity"></div>
            
            <!-- Modal Content -->
            <div class="fixed inset-0 z-50 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                    <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                        <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                            <div class="sm:flex sm:items-start">
                                <div class="w-full">
                                    <h3 class="text-2xl font-semibold leading-6 text-gray-900 mb-6">
                                        Choose Payment Method
                                    </h3>
                                    
                                    <!-- Selected Plan Info -->
                                    <div id="selectedPlanInfo" class="mb-6 p-4 bg-gray-50 rounded-lg">
                                        <!-- Plan details will be inserted here -->
                                    </div>
        
                                    <!-- Payment Methods -->
                                    <div class="space-y-4">
                                        <div class="font-medium text-gray-700">Select Payment Method:</div>
                                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-3" id="paymentMethodsGrid">
                                            <% const paymentMethods = { 
                                                BC: 'BCA Virtual Account',
                                                M2: 'Mandiri Virtual Account',
                                                VA: 'Maybank Virtual Account',
                                                B1: 'CIMB Virtual Account',
                                                BT: 'Permata Virtual Account',
                                                OV: 'OVO',
                                                DA: 'DANA',
                                                SP: 'ShopeePay QRIS'
                                            } %>
                                            
                                            <% Object.entries(paymentMethods).forEach(([code, name]) => { %>
                                                <button onclick="selectPaymentMethod('<%= code %>')"
                                                        class="payment-method-btn w-full border rounded-lg p-4 hover:border-blue-500 focus:outline-none transition-all text-left flex items-center space-x-3"
                                                        data-code="<%= code %>">
                                                    <div class="w-10 h-10 flex-shrink-0 bg-gray-100 rounded-lg flex items-center justify-center">
                                                        <!-- Payment Icon (placeholder) -->
                                                        <span class="text-lg font-semibold text-gray-500">
                                                            <%= code %>
                                                        </span>
                                                    </div>
                                                    <div class="flex-1">
                                                        <div class="text-sm font-medium text-gray-900"><%= name %></div>
                                                    </div>
                                                </button>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
        
                        <!-- Modal Footer -->
                        <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                            <button type="button"
                                    onclick="processPayment()"
                                    id="payButton"
                                    disabled
                                    class="inline-flex w-full justify-center rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 sm:ml-3 sm:w-auto disabled:opacity-50 disabled:cursor-not-allowed">
                                Pay Now
                            </button>
                            <button type="button"
                                    onclick="closePaymentModal()"
                                    class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">
                                Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<%- contentFor('script') %>
<script>
let selectedPlan = null;
let selectedPaymentMethod = null;

// Add plans data from server
const plans = <%- JSON.stringify(plans || []) %>;

function selectPlan(plan) {
    selectedPlan = plan;
    const planInfo = document.getElementById('selectedPlanInfo');
    planInfo.innerHTML = `
        <div class="text-lg font-medium">${plan.name}</div>
        <div class="text-2xl font-bold text-blue-600 mt-2">
            Rp ${Number(plan.price).toLocaleString('id-ID')}
        </div>
        <div class="text-sm text-gray-600 mt-1">Duration: ${plan.duration} days</div>
    `;
    openPaymentModal();
}

function openPaymentModal() {
    const modal = document.getElementById('paymentModal');
    modal.classList.remove('hidden');
    document.body.classList.add('overflow-hidden');
}

function closePaymentModal() {
    const modal = document.getElementById('paymentModal');
    modal.classList.add('hidden');
    document.body.classList.remove('overflow-hidden');
    resetPaymentMethod();
}

function selectPaymentMethod(code) {
    selectedPaymentMethod = code;
    // Update UI
    document.querySelectorAll('.payment-method-btn').forEach(btn => {
        if (btn.dataset.code === code) {
            btn.classList.add('ring-2', 'ring-blue-500', 'bg-blue-50');
        } else {
            btn.classList.remove('ring-2', 'ring-blue-500', 'bg-blue-50');
        }
    });
    // Enable pay button
    document.getElementById('payButton').disabled = false;
}

function resetPaymentMethod() {
    selectedPaymentMethod = null;
    document.querySelectorAll('.payment-method-btn').forEach(btn => {
        btn.classList.remove('ring-2', 'ring-blue-500', 'bg-blue-50');
    });
    document.getElementById('payButton').disabled = true;
}

async function processPayment() {
    if (!selectedPlan || !selectedPaymentMethod) return;

    const payButton = document.getElementById('payButton');
    const originalText = payButton.innerHTML;
    
    try {
        payButton.disabled = true;
        payButton.innerHTML = `
            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Processing...
        `;

        const response = await fetch('/pricing/payment/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                planId: selectedPlan.id,
                paymentMethod: selectedPaymentMethod
            })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        if (data.success && data.paymentUrl) {
            window.location.href = data.paymentUrl;
        } else {
            throw new Error(data.error || 'Payment failed');
        }
    } catch (error) {
        console.error('Payment error:', error);
        showNotification('Payment process failed. Please try again.', 'error');
        payButton.disabled = false;
        payButton.innerHTML = originalText;
    }
}

function showNotification(message, type = 'error') {
    const notification = document.createElement('div');
    notification.className = `
        fixed top-4 right-4 p-4 rounded-lg shadow-lg z-[60]
        ${type === 'error' ? 'bg-red-500' : 'bg-green-500'}
        text-white transform transition-all duration-300 ease-in-out
    `;
    notification.innerHTML = message;
    document.body.appendChild(notification);
    
    // Animate in
    requestAnimationFrame(() => {
        notification.style.transform = 'translateY(0)';
        notification.style.opacity = '1';
    });
    
    // Remove after delay
    setTimeout(() => {
        notification.style.transform = 'translateY(-100%)';
        notification.style.opacity = '0';
        setTimeout(() => notification.remove(), 300);
    }, 5000);
}

document.querySelector('#paymentModal').addEventListener('click', (e) => {
    if (e.target.id === 'paymentModal') {
        closePaymentModal();
    }
});

// Close modal on outside click
document.getElementById('paymentModal').addEventListener('click', (e) => {
    if (e.target === e.currentTarget) {
        closePaymentModal();
    }
});

// Handle escape key
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        closePaymentModal();
    }
});
</script>