<!-- views/payment/plans.ejs -->
<%- contentFor('body') %>
<div class="min-h-screen bg-gray-100 py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="text-center mb-12">
            <h1 class="text-3xl font-bold text-gray-900">Choose Your Plan</h1>
            <p class="mt-4 text-lg text-gray-600">Get access to all our features with a subscription plan</p>
        </div>

        <!-- Plans Grid -->
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
            <% plans.forEach(plan => { %>
                <div class="bg-white rounded-lg shadow-lg overflow-hidden transform transition-all hover:scale-105">
                    <div class="p-6">
                        <h2 class="text-2xl font-bold text-gray-900 mb-4"><%= plan.name %></h2>
                        <p class="text-4xl font-bold text-blue-600 mb-6">
                            Rp <%= plan.price.toLocaleString('id-ID') %>
                        </p>
                        <p class="text-gray-600 mb-6">Duration: <%= plan.duration %> days</p>
                        
                        <button onclick="selectPlan(<%= plan.id %>)" 
                                class="w-full bg-blue-600 text-white rounded-md py-3 hover:bg-blue-700 transition-colors">
                            Select Plan
                        </button>
                    </div>
                </div>
            <% }); %>
        </div>

        <!-- Payment Modal -->
        <div id="paymentModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
            <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4">
                <h2 class="text-2xl font-bold mb-6">Choose Payment Method</h2>
                
                <!-- Selected Plan Info -->
                <div id="selectedPlanInfo" class="mb-6 p-4 bg-gray-50 rounded-lg">
                    <!-- Plan details will be inserted here -->
                </div>

                <!-- Payment Methods -->
                <div class="space-y-4 mb-6">
                    <div class="font-medium text-gray-700 mb-2">Select Payment Method:</div>
                    <div class="grid grid-cols-2 gap-4">
                        <% Object.entries(paymentMethods).forEach(([code, name]) => { %>
                            <button onclick="selectPaymentMethod('<%= code %>')"
                                    class="payment-method-btn border rounded-lg p-4 hover:border-blue-500 focus:outline-none"
                                    data-code="<%= code %>">
                                <div class="text-sm font-medium"><%= name %></div>
                            </button>
                        <% }); %>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="flex justify-end space-x-4">
                    <button onclick="closePaymentModal()"
                            class="px-6 py-2 border rounded-lg hover:bg-gray-50">
                        Cancel
                    </button>
                    <button onclick="processPayment()"
                            id="payButton"
                            class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50"
                            disabled>
                        Pay Now
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- contentFor('script') %>
<script>
let selectedPlan = null;
let selectedPaymentMethod = null;

function selectPlan(planId) {
    selectedPlan = plans.find(p => p.id === planId);
    document.getElementById('selectedPlanInfo').innerHTML = `
        <div class="text-lg font-medium">${selectedPlan.name}</div>
        <div class="text-2xl font-bold text-blue-600 mt-2">
            Rp ${selectedPlan.price.toLocaleString('id-ID')}
        </div>
        <div class="text-sm text-gray-600 mt-1">Duration: ${selectedPlan.duration} days</div>
    `;
    openPaymentModal();
}

function openPaymentModal() {
    document.getElementById('paymentModal').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closePaymentModal() {
    document.getElementById('paymentModal').classList.add('hidden');
    document.body.style.overflow = '';
    resetPaymentMethod();
}

function selectPaymentMethod(code) {
    selectedPaymentMethod = code;
    // Update UI
    document.querySelectorAll('.payment-method-btn').forEach(btn => {
        if (btn.dataset.code === code) {
            btn.classList.add('border-blue-500', 'border-2');
        } else {
            btn.classList.remove('border-blue-500', 'border-2');
        }
    });
    // Enable pay button
    document.getElementById('payButton').disabled = false;
}

function resetPaymentMethod() {
    selectedPaymentMethod = null;
    document.querySelectorAll('.payment-method-btn').forEach(btn => {
        btn.classList.remove('border-blue-500', 'border-2');
    });
    document.getElementById('payButton').disabled = true;
}

async function processPayment() {
    if (!selectedPlan || !selectedPaymentMethod) return;

    const payButton = document.getElementById('payButton');
    payButton.disabled = true;
    payButton.innerHTML = '<span class="loading">Processing...</span>';

    try {
        const response = await fetch('/payment/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                planId: selectedPlan.id,
                paymentMethod: selectedPaymentMethod
            })
        });

        const data = await response.json();
        if (data.success && data.paymentUrl) {
            window.location.href = data.paymentUrl;
        } else {
            throw new Error(data.error || 'Payment failed');
        }
    } catch (error) {
        console.error('Payment error:', error);
        showNotification('Payment process failed. Please try again.', 'error');
        payButton.disabled = false;
        payButton.textContent = 'Pay Now';
    }
}

function showNotification(message, type = 'error') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg ${
        type === 'error' ? 'bg-red-500' : 'bg-green-500'
    } text-white`;
    notification.textContent = message;
    document.body.appendChild(notification);
    setTimeout(() => notification.remove(), 5000);
}

// Close modal on outside click
document.getElementById('paymentModal').addEventListener('click', (e) => {
    if (e.target === e.currentTarget) {
        closePaymentModal();
    }
});

// Add plans data from server
const plans = <%- JSON.stringify(plans) %>;
</script>