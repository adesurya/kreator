<!-- views/admin/transactions.ejs -->
<%- contentFor('body') %>
<div class="py-6">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <h1 class="text-2xl font-semibold text-gray-900">Transactions</h1>
        
        <div class="mt-6">
            <div class="flex flex-col">
                <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
                        <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Order ID
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            User
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Plan
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Amount
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Status
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Date
                                        </th>
                                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                            Actions
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    <% transactions.forEach(transaction => { %>
                                        <tr>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                                <%= transaction.merchant_order_id %>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                <%= transaction.username %><br>
                                                <span class="text-xs text-gray-400"><%= transaction.email %></span>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                <%= transaction.plan_name %>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                Rp <%= transaction.amount.toLocaleString('id-ID') %>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <span class="status-badge px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full 
                                                    <%= transaction.status === 'SUCCESS' ? 'bg-green-100 text-green-800' : 
                                                       transaction.status === 'FAILED' ? 'bg-red-100 text-red-800' : 
                                                       'bg-yellow-100 text-yellow-800' %>">
                                                    <%= transaction.status || 'PENDING' %>
                                                </span>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                <%= new Date(transaction.created_at).toLocaleString('id-ID') %>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                <button onclick="checkStatus('<%= transaction.merchant_order_id %>')" 
                                                        class="text-blue-600 hover:text-blue-900">
                                                    Check Status
                                                </button>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Modal -->
    <div id="statusModal" class="hidden fixed z-10 inset-0 overflow-y-auto">
        <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 transition-opacity" aria-hidden="true">
                <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
            </div>
            <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
            <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modalTitle">
                                Transaction Status
                            </h3>
                            <div class="mt-4">
                                <div id="statusContent" class="text-sm text-gray-500">
                                    Loading...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                    <button type="button" 
                            onclick="closeModal()"
                            class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none sm:ml-3 sm:w-auto sm:text-sm">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- contentFor('script') %>
<script>
async function checkStatus(merchantOrderId) {
    showModal();
    
    try {
        const response = await fetch('/admin/transactions/check-status', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ merchantOrderId })
        });

        const data = await response.json();
        
        if (response.ok) {
            // Format status message
            const statusHtml = `
                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="font-medium">Status:</span>
                        <span class="status-badge px-2 py-1 text-xs font-semibold rounded-full 
                            ${data.statusCode === '00' ? 'bg-green-100 text-green-800' : 
                             data.statusCode === '01' ? 'bg-red-100 text-red-800' : 
                             'bg-yellow-100 text-yellow-800'}">
                            ${data.statusCode === '00' ? 'SUCCESS' : 
                              data.statusCode === '01' ? 'FAILED' : 'PENDING'}
                        </span>
                    </div>
                    <div class="flex justify-between">
                        <span class="font-medium">Reference:</span>
                        <span>${data.reference || '-'}</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="font-medium">Message:</span>
                        <span>${data.statusMessage || '-'}</span>
                    </div>
                </div>
            `;
            
            document.getElementById('statusContent').innerHTML = statusHtml;
            
            // Update status badge in table
            const statusBadge = document.querySelector(`tr[data-order-id="${merchantOrderId}"] .status-badge`);
            if (statusBadge) {
                statusBadge.className = `status-badge px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
                    data.statusCode === '00' ? 'bg-green-100 text-green-800' : 
                    data.statusCode === '01' ? 'bg-red-100 text-red-800' : 
                    'bg-yellow-100 text-yellow-800'
                }`;
                statusBadge.textContent = data.statusCode === '00' ? 'SUCCESS' : 
                                        data.statusCode === '01' ? 'FAILED' : 'PENDING';
            }
        } else {
            throw new Error(data.error || 'Failed to check status');
        }
    } catch (error) {
        document.getElementById('statusContent').innerHTML = `
            <div class="text-red-600">
                Error: ${error.message}
            </div>
        `;
    }
}

function showModal() {
    document.getElementById('statusModal').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
}

function closeModal() {
    document.getElementById('statusModal').classList.add('hidden');
    document.body.style.overflow = '';
}

// Close modal on escape key
document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape' && !document.getElementById('statusModal').classList.contains('hidden')) {
        closeModal();
    }
});

// Close modal on outside click
document.getElementById('statusModal').addEventListener('click', function(event) {
    if (event.target === this) {
        closeModal();
    }
});
</script>